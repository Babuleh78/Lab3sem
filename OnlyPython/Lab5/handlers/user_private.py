import asyncio
import os
import random
import sqlite3
from aiogram import F, types, Router, Bot
from aiogram.filters import CommandStart, Command, or_f
from klava import reply, inline
from klava.reply import get_keyboard
user_private_router = Router()
path_mas = ['C:\images\DIO.jpg', "C:\images\Megaded.png", "C:\images\Lemmi.jpg",   "C:\images\Phil.jpg",  "C:\images\Bruce.jpg",]
citata_mas= ['–ú—É–∑—ã–∫–∞–Ω—Ç—ã –º–æ–µ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è ‚Äî –∂–∏–≤–æ–π –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, —á–µ–≥–æ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∏—á—å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤–µ—Ä—ã –≤ —Å–≤–æ–µ –ø—Ä–∞–≤–æ–µ –¥–µ–ª–æ, –∏ –º—ã –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã —Å–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–∏–º: ¬´–ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å!¬ª',
             '‚Äì –£ –¥–æ–∫—Ç–æ—Ä–∞ –Ω–µ –±—ã–ª–æ –ø—Ä–∞–≤–∞ —Ç–∞–∫ —Å–æ –º–Ω–æ–π —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å. –Ø –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å –ø–æ–∑–≤–æ–ª—è—Ç—å –∫–æ–º—É-—Ç–æ –≤—Ä–æ–¥–µ –Ω–µ–≥–æ –ø–æ—Å—ã–ª–∞—Ç—å –≤–æ –≤—Å–µ–ª–µ–Ω–Ω—É—é —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±–æ –º–Ω–µ. –í –º–æ–µ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –∫–æ–≥–¥–∞ –æ–Ω –≥–æ–≤–æ—Ä–∏–ª —ç—Ç–∏ –≤–µ—â–∏, –æ–Ω–∏ –±—ã–ª–∏ –Ω–µ–ø—Ä–∞–≤–¥–æ–π –¥–ª—è –º–µ–Ω—è, –∏ —è –Ω–µ —Å–æ–±–∏—Ä–∞–ª—Å—è —ç—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å. –î—ç–π–≤ –ú–∞—Å—Ç–µ–π–Ω –æ –¥–∏–∞–≥–Ω–æ–∑–µ, –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—â–µ–º—É –µ–º—É –∏–≥—Ä–∞—Ç—å ', 
             '–ë—ã—Ç—å –±—ã—Å—Ç—Ä—ã–º –∏ –∑–ª—ã–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –±—ã—Å—Ç—Ä—ã–º –∏ –∑–ª—ã–º —É–±–ª—é–¥–∫–æ–º –∏ —Ç–æ–≥–¥–∞ –ª—é–¥–∏ –ø–æ–ª—é–±—è—Ç —Ç–µ–±—è',
             '–ù–µ —Å—Ç–æ–∏—Ç –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞—Ç—å –ø–∞—Ü–∞–Ω–∞, –Ω–æ –µ—Å–ª–∏ –≤—ã —ç—Ç–æ –¥–µ–ª–∞–µ—Ç–µ, —Ç–æ –≤—ã, ***** [—á–µ—Ä—Ç –≤–æ–∑—å–º–∏], –ø–æ–ª–Ω—ã–π ***** [–Ω–µ—Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫]. –ü–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ—Ç –ø–∞—Ü–∞–Ω ‚Äî —ç—Ç–æ —è.',
             '–ï—Å—Ç—å —Ç–æ–ª—å–∫–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º—É–∑—ã–∫–∏: –º–µ—Ç–∞–ª –∏ —Ö***—è [–µ—Ä—É–Ω–¥–∞].'
             ]
ADMIN_ID = os.getenv('ADMIN')
IS_ADMIN = False
IGNORE_CASE = False
bot = Bot(token = os.getenv('TOKEN'))
def delete_ach():
    conn = sqlite3.connect('achs.db')
    cursor = conn.cursor()
    cursor.execute('''DELETE FROM achs''')  
    conn.commit()  
    conn.close()  
def create_db():
    conn = sqlite3.connect('achs.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS achs (
            id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            ach TEXT NOT NULL
        )
    ''')
    conn.commit()
    conn.close()
def save_ach(user_id, message):
    conn = sqlite3.connect('achs.db')
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO achs (user_id, ach) VALUES (?, ?)
    ''', (user_id, message))
    conn.commit()
    conn.close()
def get_ach(user_id):
    conn = sqlite3.connect('achs.db')
    cursor = conn.cursor()
    cursor.execute('SELECT ach FROM achs WHERE user_id = ?', (user_id,))
    messages = cursor.fetchall()
    conn.close()
    return messages

create_db()
#------------------------–û–±—â–µ–µ-----------------
@user_private_router.message(or_f(CommandStart(), (F.text.lower() == "–Ω–∞–∑–∞–¥")))
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç ü§ñ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å —É—á–µ–±–æ–π!üß† –Ø –º–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –º—É–∑—ã–∫—É üéµ –¥–ª—è –∑–∞–Ω—è—Ç–∏–π, –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è üñ•Ô∏è, –ø—Ä–∏–¥–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é, –∞ —Ç–∞–∫ –∂–µ –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª üìÇ –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!", 
        reply_markup = reply.get_keyboard(
            "–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
            "–¢–µ—Ö–Ω–∏–∫–∏",
            "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥—É—Ö",
            "–ú—É–∑—ã–∫–∞", 
            sizes = (2, 2)

        ),
    )
#------------–ü—Ä–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è SQL –∏ –ø—Ä–æ—á–∏–µ —Å—Ç—Ä–∞—à–∏–ª–∫–∏-----------------------
@user_private_router.message(or_f(Command('ach'), (F.text.lower() == "–º–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")))
async def info_panel(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–Ω–µ—Å—Ç–∏ –¥–µ–ª–æ, –Ω–∞–ø–∏—à–∏ –µ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ '–î:–°–ø–∞—Å –∫–æ—Ç–∞' üìö", 
                         reply_markup= reply.get_keyboard(
                             "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ üòé",
                             "–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ ‚ùå ",
                             "–ù–∞–∑–∞–¥ ‚Üì",
                             sizes = (2, 2)
                         ),
    )

@user_private_router.message(F.text.lower().contains("–¥:"))
async def info_panel(message: types.Message):
    str = message.text[2:]
    save_ach(message.from_user.id, str)
    await message.answer("–í–∞—à–µ –¥–µ–ª–æ –∑–∞–Ω–µ—Å–µ–Ω–æ!‚úÖ")

@user_private_router.message(F.text.lower() == '–æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫')
async def info_panel(message: types.Message):
    delete_ach()
    await message.answer("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –æ—á–∏—â–µ–Ω!‚ùå")
@user_private_router.message(F.text.lower() == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫')
async def info_panel(message: types.Message):
    user_id = message.from_user.id
    messages = get_ach(user_id)
    if messages:
        response = "–í–∞—à–∏ –¥–µ–ª–∞: \n"
        for msg in messages:
            response += f"{msg[0]} \n"
    else:
        response = "–í—ã –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏üñï"

    await message.answer(response)
#----------------------–ü—Ä–æ –º–æ—Ç–∏–≤–∞—Ü–∏—é--------------------------------
@user_private_router.message(or_f(Command("quote"), (F.text.lower() == "–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥—É—Ö")))
async def info_panel(message: types.Message):
    a = random.randint(0, 4)
    try:
        file_path = path_mas[a]
        photo = types.FSInputFile(path = file_path)
        await bot.send_photo(chat_id=message.chat.id, photo=photo)
        await bot.send_message(message.chat.id, text = citata_mas[a])
    except FileNotFoundError:
        await bot.send_message(message.chat.id, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        await bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
#-----------------------–ü—Ä–æ —Ç–µ—Ö–Ω–∏–∫–∏------------------------
@user_private_router.message(or_f(Command('techniques'), (F.text.lower() == "—Ç–µ—Ö–Ω–∏–∫–∏")))
async def info_panel(message: types.Message):
    await message.answer("–°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è üå∂Ô∏è –ø—Ä–æ –∫–∞–∫—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ? ü§î", 
                         reply_markup= reply.get_keyboard(
                             "–ü–æ–º–æ–¥–æ—Ä–æ",
                             "–ú–µ—Ç–æ–¥ '90 –Ω–∞ 30'",
                             "–ú–∞—Ç—Ä–∏—Ü–∞ –≠–π–∑–µ–Ω—Ö–∞—É—ç—Ä–∞",
                             "–ú–µ—Ç–æ–¥ GTD",
                             "–ù–∞–∑–∞–¥ ",
                             sizes = (2, 2)
                         ),
    )

@user_private_router.message((F.text.lower() == '–ø–æ–º–æ–¥–æ—Ä–æ'))
async def menu_command(message: types.Message):
    await message.answer("–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–∞–π–º–µ—Ä –Ω–∞ 25 –º–∏–Ω—É—Ç –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —Ä–∞–±–æ—Ç—É, –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—è—Å—å. –ü–æ—Å–ª–µ "
                          "—Å–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ 5 –º–∏–Ω—É—Ç –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ü–∏–∫–ª –∑–∞–Ω–æ–≤–æ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É. –ß–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ —á–µ—Ç—ã—Ä–µ —Ü–∏–∫–ª–∞ –¥–µ–ª–∞–π—Ç–µ –±–æ–ª—å—à–æ–π "
                           "–ø–µ—Ä–µ—Ä—ã–≤ –≤ 30 –º–∏–Ω—É—Ç. –°–º—ã—Å–ª –º–µ—Ç–æ–¥–∞ –≤ —Ç–æ–º, —á—Ç–æ –º–æ–Ω–æ—Ç–æ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏–µ —á–∞—Å—Ç–∏, –∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π –æ—Ç–¥—ã—Ö "
                            "–¢–∞–∫ –ª–µ–≥—á–µ –≤–∑—è—Ç—å—Å—è –∑–∞ —Ç–∞–∫–∏–µ –∑–∞–¥–∞—á–∏, –∏ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏—Ö –ª—É—á—à–µ", 
                            reply_markup= inline.get_inlineMix_btns(
                                btns = {
                                    '–ó–∞—Å–µ—á—å': 'time1',
                                    '–ü–æ–¥—Ä–æ–±–Ω–µ–µ': 'https://skillbox.ru/media/management/pomodoro/'
                                }
                            )
    )
    
@user_private_router.message((F.text.lower() == "–º–µ—Ç–æ–¥ '90 –Ω–∞ 30'"))
async def menu_command(message: types.Message):
    await message.answer("–ü–æ —ç—Ç–æ–º—É –º–µ—Ç–æ–¥—É –Ω–∞ —Ä–∞–±–æ—Ç—É –æ—Ç–≤–æ–¥–∏—Ç—Å—è –ø–æ–ª—Ç–æ—Ä–∞ —á–∞—Å–∞ (90 –º–∏–Ω—É—Ç), –∞ –ø–æ—Å–ª–µ ‚Äî –ø–æ–ª—á–∞—Å–∞ –Ω–∞ –æ—Ç–¥—ã—Ö. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ü–∏–∫–ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è."
                         " –ö–∞–∂–¥—ã–π –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∞—Å–∞."
                        "–í–∞–∂–Ω–æ: –ø–µ—Ä–≤—ã–µ —Ü–∏–∫–ª—ã –æ—Ç–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –∏ —Å–ª–æ–∂–Ω—ã–µ –¥–µ–ª–∞, –∞ —Å–ª–µ–¥—É—é—â–∏–µ ‚Äì –Ω–∞ –º–µ–Ω–µ–µ –≤–∞–∂–Ω—ã–µ", 
                            reply_markup= inline.get_inlineMix_btns(
                                btns = {
                                    '–ó–∞—Å–µ—á—å': 'time2',
                                    '–ü–æ–¥—Ä–æ–±–Ω–µ–µ': 'https://habr.com/ru/companies/click/articles/656109/'
                                }
                            )
    )
@user_private_router.message((F.text.lower() == "–º–µ—Ç–æ–¥ gtd"))
async def menu_command(message: types.Message):
    await message.answer("–ó–∞–ø–∏—à–∏—Ç–µ –≤—Å–µ –≤–∞—à–∏ –¥–µ–ª–∞ –≤ –±–ª–æ–∫–Ω–æ—Ç –∏–ª–∏ —Ç–µ—Ç—Ä–∞–¥—å, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –µ–µ –ø–æ —Ä–∞–∑–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –Ω–∞–ø—Ä–∏–º–µ—Ä '–£—á–µ–±–∞', '–î—Ä—É–∑—å—è', '–î–æ–º'. –ó–∞—Ç–µ–º, —Å–ª–µ–¥—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–º—É"
                         " –ø–ª–∞–Ω—É –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –¥–µ–ª–∞!",
                            reply_markup= inline.get_inlineMix_btns(
                                btns = {
                                    '–Ø —Å–æ—Å—Ç–∞–≤–∏–ª —Å–ø–∏—Å–æ–∫': '–Ø —Å–æ—Å',
                                    '–ü–æ–¥—Ä–æ–±–Ω–µ–µ': 'https://habr.com/ru/articles/599391/'
                                }
                            )
    )
@user_private_router.message((F.text.lower() == "–º–∞—Ç—Ä–∏—Ü–∞ —ç–π–∑–µ–Ω—Ö–∞—É—ç—Ä–∞"))
async def menu_command(message: types.Message):
    await message.answer("–í–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –¥–µ–ª–∞, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–≤ –∏—Ö –Ω–∞ —á–µ—Ç—ã—Ä–µ –≥—Ä—É–ø–ø—ã –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏:"
                        "—Å—Ä–æ—á–Ω—ã–µ –∏ –≤–∞–∂–Ω—ã–µ; —Å—Ä–æ—á–Ω—ã–µ, –Ω–æ –Ω–µ –≤–∞–∂–Ω—ã–µ; –Ω–µ—Å—Ä–æ—á–Ω—ã–µ, –Ω–æ –≤–∞–∂–Ω—ã–µ; –Ω–µ—Å—Ä–æ—á–Ω—ã–µ –∏ –Ω–µ –≤–∞–∂–Ω—ã–µ",
                            reply_markup= inline.get_inlineMix_btns(
                                btns = {
                                    '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Ç–∞–±–ª–∏—Ü—É': '—Ç–∞–±–ª–æ',
                                    '–ü–æ–¥—Ä–æ–±–Ω–µ–µ': 'https://skillbox.ru/media/management/matritsa_eyzenkhauera/'
                                }
                            )
    )
@user_private_router.callback_query(F.data.startswith("—Ç–∞–±–ª–æ"))
async def process_callback_button(callback_query: types.CallbackQuery):
    try:
        file_path = 'C:\images\matrix.jpg'
        photo = types.FSInputFile(path = file_path)
        await bot.send_photo(chat_id=callback_query.message.chat.id, photo=photo)
        await bot.send_message(callback_query.message.chat.id, "–•–æ—Ä–æ—à–æ –ø–æ—Ç—Ä—É–¥–∏—Ç—å—Å—è!")
    except FileNotFoundError:
        await bot.send_message(callback_query.message.chat.id, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        await bot.send_message(callback_query.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

@user_private_router.callback_query(F.data.startswith("–Ø —Å–æ—Å"))
async def process_callback_button(callback_query: types.CallbackQuery):
    try:
        file_path = 'C:\images\GTD.jpg'
        photo = types.FSInputFile(path = file_path)
        await bot.send_photo(chat_id=callback_query.message.chat.id, photo=photo)
        await bot.send_message(callback_query.message.chat.id, "–£—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã!")
    except FileNotFoundError:
        await bot.send_message(callback_query.message.chat.id, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        await bot.send_message(callback_query.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

@user_private_router.callback_query(F.data.startswith("t"))
async def process_callback_button(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)

    if callback_query.data == 'time1':
        await bot.edit_message_text("–í—Ä–µ–º—è –ø–æ—à–ª–æ! –†–∞–±–æ—Ç–∞–π—Ç–µ 25 –º–∏–Ω—É—Ç üíª", 
                                     chat_id=str(callback_query.from_user.id), 
                                     message_id=callback_query.message.message_id)
        await asyncio.sleep(25*60)
        await bot.edit_message_text("–í—Ä–µ–º—è –≤—ã—à–ª–æ! –°–¥–µ–ª–∞–π—Ç–µ –±–æ–ª—å—à–æ–π –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å ü•Ç ", 
                                     chat_id=str(callback_query.from_user.id), 
                                     message_id=callback_query.message.message_id)
    
    elif callback_query.data == 'time2':
        await bot.edit_message_text("–í—Ä–µ–º—è –ø–æ—à–ª–æ! –†–∞–±–æ—Ç–∞–π—Ç–µ 90 –º–∏–Ω—É—Ç üíª", 
                                     chat_id=str(callback_query.from_user.id), 
                                     message_id=callback_query.message.message_id)
        await asyncio.sleep(90*60)
        await bot.edit_message_text("–í—Ä–µ–º—è –≤—ã—à–ª–æ! –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ 30 –º–∏–Ω—É—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å ü•Ç", 
                                     chat_id=str(callback_query.from_user.id), 
                                     message_id=callback_query.message.message_id)
#----------------------------------------------–ú—É–∑—ã—á–∫–∞-------------------------------------------
@user_private_router.message(or_f(Command('music'), (F.text.lower() == "–º—É–∑—ã–∫–∞")))
async def process_callback_button(message: types.Message):
    await message.answer("–ú–Ω–æ–≥–∏–µ –ª—é–±—è—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–¥ —Ç–∏—Ö—É—é –º—É–∑—ã–∫—É –Ω–∞ —Ñ–æ–Ω–µ üéß –æ–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª—å—à–µ –∏ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –±–æ–ª–µ–µ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. "
                         "–ß—Ç–æ–∂, –∫–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è?ü§ó", 
                         reply_markup= inline.get_inlineMix_btns(
                             btns = {
                                "–ú—Ä–∞—á–Ω–æ–µ÷¥÷∂ ü¶á" : '–º—Ä–∞—á–Ω–æ–µ',
                                "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ–µ üéØ" : '—Å–µ—Ä—å–µ–∑–Ω–æ–µ',
                                "–°–ø–æ–∫–æ–π–Ω–æ–µ üòå" : '—Å–ø–æ–∫–æ–π–Ω–æ–µ',
                                "–ë–æ–µ–≤–æ–µ üé∏" : '–±–æ–µ–≤–æ–µ',
                             }
                         ),
    )

@user_private_router.callback_query(F.data.startswith('–±–æ'))
async def info_panel(callback_query: types.CallbackQuery):
    await bot.send_message(
        chat_id=callback_query.from_user.id,  
        text=("–û—Ç–ª–∏—á–Ω–æ, —è –≤–∏–∂—É, —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤—ã –¥—Ä–∞—Ç—å—Å—è –Ω–µ –Ω–∞ –∂–∏–∑–Ω—å, –∞ –Ω–∞—Å–º–µ—Ä—Ç—å ü™ì –¢–æ–ª—å–∫–æ –ø–æ–æ–±–µ—â–∞–π—Ç–µ –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è! –•–æ—Ä–æ—à–µ–π —Ä–∞–±–æ—Ç—ã! "),
        reply_markup=inline.get_inlineMix_btns(
            btns={
                "–ó–æ–≤ —Å–µ–≤–µ—Ä–∞": 'https://youtu.be/9WXsdApQIY4?si=DkLEiYA_Kl90wsOU',
                "–í–∏–≥–≤–∞–º —à–∞–º–∞–Ω–∞": 'https://youtu.be/_Nqlg_hZdVc?si=l24THmcdVUb58M7o',
                "–ú—É–¥—Ä–æ—Å—Ç—å –¥—Ä–∞–∫–æ–Ω–∞": 'https://youtu.be/2rcckLnrAbg?si=XNG7_pKmVYj8oCcA',
                "–¢—è–∂–µ–ª—ã–π –º–µ—Ç–∞–ª": 'https://my.mail.ru/mail/alex-enm/video/46908/714343.html?from=videoplayer',
            }
        )
    )
    await callback_query.answer()
    



@user_private_router.callback_query(F.data.startswith('—Å–ø–æ–∫'))
async def info_panel(callback_query: types.CallbackQuery):
    await bot.send_message(
        chat_id=callback_query.from_user.id,  
        text=("–†–∞–¥, —á—Ç–æ –≤—ã —Å–µ–≥–æ–¥–Ω—è —Å–ø–æ–∫–æ–π–Ω—ã üåä —Å –≤–∞—à–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –≤–∞–º –ø–æ–º–æ–∂–µ—Ç —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è –ø—Ä–∏—è—Ç–Ω—ã–π –¥–∂–∞–∑ –∏ Lo-Fi, –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è! "),
        reply_markup=inline.get_inlineMix_btns(
            btns={
                "Lo-fi": 'https://www.youtube.com/live/d2VdpHxmbPE?si=rLOMXqrqgFabNSZd',
                "Chill Lo-fi": 'https://youtu.be/CLeZyIID9Bo?si=3yI1pOfC22Zlsk2w',
                "–°–ø–æ–∫–æ–π–Ω—ã–π –¥–∂–∞–∑": 'https://www.youtube.com/live/2oWN7waCXIo?si=M1q5WbXAivpAs-NH',
                "–ë–æ—Å—Å–∞ –Ω–æ–≤–∞": 'https://youtu.be/7GkHh3qLwgU?si=7HhQRYjk0CskJA0U',
            }
        )
    )
    await callback_query.answer()
    


@user_private_router.callback_query(F.data.startswith('—Å–µ—Ä—å'))
async def info_panel(callback_query: types.CallbackQuery):
    await bot.send_message(
        chat_id=callback_query.from_user.id,  
        text=("–í–∏–∂—É –≤—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—Ç—É! üñ•Ô∏è –ì–æ—Ç–æ–≤ –ø–æ—Å–ø–æ—Ä–∏—Ç—å, —Å —ç—Ç–æ–π –º—É–∑—ã–∫–æ–π –≤–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ "
              "–≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø—Ä–æ—â–µ"),
        reply_markup=inline.get_inlineMix_btns(
            btns={
                "–ì–ª—É–±–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è": 'https://youtu.be/j8L6IvuYGOQ?si=hGsxDzCnWRp1jjWM',
                "–ù–æ—á–Ω–æ–π –≥–æ—Ä–æ–¥": 'https://youtu.be/n9Y2Eb4BaSg?si=IXw-eY6Wrlx41JPg',
                "–û—Å–µ–Ω–Ω–∏–π –≤–µ—á–µ—Ä": 'https://youtu.be/m6SOJlkN1zU?si=zPwF_mCPxXOeuMK2',
                "–ù–∞—É—á–Ω–∞—è –º—É–∑—ã–∫–∞": 'https://youtu.be/5i0Z0E5yaYI?si=Ys6Bm3yzDPCercDp',
            }
        )
    )
    await callback_query.answer()
    

@user_private_router.callback_query(F.data.startswith('–º—Ä–∞—á'))
async def info_panel(callback_query: types.CallbackQuery):
    await bot.send_message(
        chat_id=callback_query.from_user.id,  
        text=("–° —Ç–∞–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∏—Ç—å –≤–µ–ª–∏–∫–∏–µ –ø–ª–∞–Ω—ã –∏ —Å–æ–≤–µ—Ä—à–∞—Ç—å –≤–µ–ª–∏–∫–∏–µ –¥–µ—è–Ω–∏—è!‚öîÔ∏è "
              "–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, "
              "—á—Ç–æ –¥–∞–∂–µ –≤–µ–ª–∏–∫–∏–µ –Ω–µ –∑–∞–±—ã–≤–∞–ª–∏ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ —Å–æ–≤–µ—Ä—à–∞–ª–∏ –æ—à–∏–±–∫–∏ üõ°Ô∏è"),
        reply_markup=inline.get_inlineMix_btns(
            btns={
                "–ì—Ä–æ–º –∏ –∫–ª–∞—Å—Å–∏–∫–∞": 'https://youtu.be/86WzoZt-ezs?si=fBGxVPG1ARWeptER',
                "–í–µ–ª–∏—á–∏–µ –†–∏–º–∞": 'https://youtu.be/hC0Th-HZx5M?si=g_NkzZA58RRQmy2X',
                "–°—Ç–æ–π–∫–æ—Å—Ç—å –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ": 'https://youtu.be/Mbb_un0rkH4?si=ooE2r5hLnQhVIuyd',
                "–ü—É–≥–∞—é—â–µ–µ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ": 'https://youtu.be/-ZWwmVDQ20Q?si=4cpfWbpLq44HNY3N',
            }
        )
    )
    await callback_query.answer()















#---------–î–ª—è –∞–¥–º–∏–Ω–∞, –µ—Å–ª–∏ –æ–Ω–æ –≤–æ–æ–±—â–µ –±—É–¥–µ—Ç. SHATTEREDDD
ADMIN_KB = get_keyboard(
    "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
    "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä",
    "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
    "–Ø —Ç–∞–∫, –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—à–µ–ª",
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(2, 1, 1),
)

@user_private_router.message(Command("admin"))
async def admin_panel(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer("–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup= ADMIN_KB)
        IS_ADMIN = True
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
#--------------------–ü–∞—Å—Ö–∞–ª—Å–∫–∏ –¥–ª—è —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö-------------------
@user_private_router.message(F.text == "1602")
async def menu_command(message: types.Message):
    await message.answer("Great trial is coming :)")